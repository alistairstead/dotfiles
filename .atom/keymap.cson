# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.

'atom-workspace':
  'ctrl-n': 'advanced-open-file:toggle'
  'ctrl-o': 'git-projects:toggle'
  'ctrl-.': 'terminal-plus:toggle'

'atom-workspace atom-text-editor:not(.mini)':
  'ctrl-;': 'jumpy:toggle'

'atom-workspace atom-text-editor.jumpy-jump-mode':
  'ctrl-;': 'jumpy:clear'

'atom-text-editor.vim-mode':
  'ctrl-i': 'vim-mode:reset-normal-mode'
  'j k': 'vim-mode:reset-normal-mode'
  'up': 'core.noop'
  'down': 'core.noop'
  'left': 'core.noop'
  'right': 'core.noop'

'atom-text-editor.vim-mode.command-mode':
  'up': 'core.noop'
  'down': 'core.noop'
  'left': 'core.noop'
  'right': 'core.noop'
  'del': 'core.noop'

'atom-text-editor:not(mini).autocomplete-active':
  'tab': 'autocomplete-plus:confirm'
  'enter': 'autocomplete-plus:confirm'
  'up': 'core.noop'
  'down': 'core.noop'
  'ctrl-p': 'core:move-up'
  'ctrl-n': 'core:move-down'
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

'atom-text-editor:not([mini])':
  'alt-tab': 'emmet:expand-abbreviation'
