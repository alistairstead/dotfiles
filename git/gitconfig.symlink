# -*- sh -*-

[user]
    name = Alistair Stead
    email = alistair.stead@designdisclosure.com

[github]
    user = alistairstead

[core]
	  editor = atom -w
    excludesfile = /opt/boxen/config/git/gitignore
    pager = less -FXRS -x2

[alias]
    diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines
    cnv = commit --no-verify
    co = checkout
    br = branch -v
    # show a pretty log graph
    lg = log --graph --pretty=oneline --abbrev-commit --decorate
    # slight variation of pretty log graph
    l = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    # show files that have changed between two branches (git dbr master..branch)
    dbr = diff --name-status
    # show diff of cached files
    dc = diff --cached
    # show changed files for a commit
    cf = show --pretty="format:" --name-only
    # show what I did today
    day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"

    fixup = !sh -c 'git commit --fixup=$1' -
    squash = !sh -c 'git commit --squash=$1' -
    ri = rebase --interactive --autosquash

    # stash shortcuts
    sp = stash pop
    sw = stash save
    sl = stash list
    sh = show --pretty="format:" --name-only

    # show number of commits per contributor, sorted
    count = shortlog -sn

    undo = reset --soft HEAD~1
    amend = commit --amend -C HEAD

    cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

    # rebase the current branch with changes from upstream remote
    update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

    # grep commands

    # 'diff grep'
    dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
    # diff grep changes between two commits
    dgc = "!sh -c 'git ls-files | grep $1 | xargs git diff $2 $3 -- ' -"
    # 'checkout grep'
    cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
    # add grep
    ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add' -"
    # add all
    aa = !git ls-files -d | xargs git rm && git ls-files -m -o --exclude-standard | xargs git add
    # remove grep - Remove found files that are NOT under version control
    rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm' -"

    done = fetch && git rebase origin/master && git checkout master && git merge @{-1}

    # Other useful aliases:
    unstage = reset HEAD
    staged = diff --cached
    unstaged = diff
    track = checkout -t
    ci = commit
    st = status
    br = branch
    b = branch

    head = !git l -1
    h = !git head
    hp = "!source ~/src/dotfiles/git/functions/log && show_git_head"
    r = !git l -30
    ra = !git r --all
    l = "!source ~/src/dotfiles/git/functions/log && pretty_git_log"
    la = !git l --all
    # git changelog 0.4.5...0.5.3 using tags or tree-ish references
    whatchanged = log --pretty=oneline --no-merges
    # Packing files added in a changeset
    pack = git show --pretty="format:" --name-only --diff-filter=A rev-sha | xargs zip -r0 rev-sha.zip
    who = shortlog -n -s --no-merges
    cleanup = !git remote prune origin && git gc && git clean -dfx && git stash clear
    rmb = !sh -c 'git branch -D $1 && git push origin :$1' -

    # http://stackoverflow.com/a/10693888/11543
    branch-by-date = for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short) %(committerdate:short) %(authorname)'

    # Ignore/unignore changes to files (like a local .gitignore)
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git status -s | awk {'print $2'} | xargs git assume"

    # "git rev-parse" not completely correct; see the __gitdir alias in:
    # https://raw.github.com/git/git/master/contrib/completion/git-completion.bash
    updatehooks = !rm -rf $(git rev-parse --git-dir)/hooks && cp -a ~/src/dotfiles/git/templates/hooks $(git rev-parse --git-dir) && chmod +x $(git rev-parse --git-dir)/hooks/*

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto

[color "branch"]
    current = green bold
    local = green
    remote = red bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red

[color "sh"]
    branch = yellow

[apply]
    # do not warn about missing whitespace at EOF
    whitespace = nowarn

[help]
    autocorrect = 1

[status]
    submodule = 1

[push]
    default = current

[pack]
    threads = 0

[credential]
	helper = osxkeychain

[init]
    templatedir = ~/src/dotfiles/git/templates

[rerere]
    enabled = true
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[diff]
	tool = Kaleidoscope
[difftool]
	prompt = false
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[mergetool]
	prompt = false
[merge]
	tool = Kaleidoscope

[hub]
protocol = https
