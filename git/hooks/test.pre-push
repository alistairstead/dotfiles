#!/bin/sh

# git hook to run test commands before `git push`

EXIT_CODE=0
repo=$( git rev-parse --show-toplevel )
# Branch names against which you want to ensure tests are run
protected_branchs=('master', 'develop')
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
match=$(echo "${protected_branchs[@]:0}" | grep -o $current_branch)

# Exit early if we have no commits to be tested
commits=`git log @{u}..`
if [ -z "$commits" ]; then
    exit 0
fi

# If you are on a matching branch
if [[ ! -z $match ]]; then
  check_tests() {
    if [[ -e "${repo}/$1" ]]; then
      eval "$2"
      EXIT_CODE=$((${EXIT_CODE} + $?))
    fi
  }
fi

# Example usage
# In this example it's used to run `npm test` if package.json is present at the root of the repos.
check_tests package.json "npm test"
check_tests /bin/phpspec "/bin/phpspec run --quiet"
check_tests /bin/behat "/bin/behat"

exit $((${EXIT_CODE}))
